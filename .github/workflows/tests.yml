name: Tests
on:
  push:
    branches:
      - main
      - '*.x'
    paths-ignore:
      - 'docs/**'
      - '*.md'
      - '*.rst'
      - '*.txt'
  pull_request:
    branches:
      - main
      - '*.x'
    paths-ignore:
      - 'docs/**'
      - '*.md'
      - '*.rst'
      - '*.txt'
jobs:
  tests:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - {name: 3.10 Windows, python: '3.10', os: windows-latest, tox: py310}
          - {name: 3.10 Mac, python: '3.10', os: macos-latest, tox: py310}
          - {name: 3.10 Linux, python: '3.10', os: ubuntu-latest, tox: py310}
          - {name: Lint, python: '3.10', os: ubuntu-latest, tox: lint}
          - {name: Typing, python: '3.10', os: ubuntu-latest, tox: typing}
          - {name: Style, python: '3.10', os: ubuntu-latest, tox: style}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      - name: update pip
        run: |
          python -m pip install -U pip
      - name: get pip cache dir
        id: pip-cache
        run: echo "::set-output name=dir::$(pip cache dir)"
      - name: cache pip
        uses: actions/cache@v3
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: pip|${{ runner.os }}|${{ matrix.python }}|${{ hashFiles('requirements/*.txt') }}
          restore-keys: pip|${{ runner.os }}|${{ matrix.python }}
      - run: pip install tox
      - run: tox -e ${{ matrix.tox }}
  # runs:
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest, macos-latest, windows-latest]
  #   env:
  #     OS: ${{ matrix.os }}
  #     PYTHON: '3.10'
  #   steps:
  #     - name: Upload coverage to Codecov
  #       uses: codecov/codecov-action@v3
  #       with:
  #         token: ${{ secrets.CODECOV_TOKEN }}
  #         directory: ./coverage/reports/
  #         env_vars: OS,PYTHON
  #         fail_ci_if_error: true
  #         files: ./coverage1.xml,./coverage2.xml
  #         flags: unittests
  #         name: codecov-umbrella
  #         path_to_write_report: ./coverage/codecov_report.txt
  #         verbose: true